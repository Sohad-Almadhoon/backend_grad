generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int        @id @default(autoincrement())
  email               String     @unique
  password            String
  isSeller            Boolean
  createdAt           DateTime   @default(now())
  username            String     @unique
  whatsapp            String
  resetPasswordToken  String?
  resetPasswordExpiry DateTime?
  cars                Car[]
  cartItems           Cart[]
  favorites           Favorite[]
  orders              Order[]
  reviews             Review[]
}

model Car {
  id              Int          @id @default(autoincrement())
  color           String
  price           Float
  coverImage      String
  createdAt       DateTime     @default(now())
  images          String[]
  sellerId        Int
  transmission    Transmission
  updatedAt       DateTime     @updatedAt
  year            Int
  battery         Int
  brand           String
  carType         String
  speed           Float
  fuelType        String
  climate         Boolean
  country         String
  range           Decimal
  seats           Int
  quantitySold    Int          @default(0)
  quantityInStock Int
  seller          User         @relation(fields: [sellerId], references: [id])
  cartItems       Cart[]
  favorites       Favorite[]
  orders          Order[]
  reviews         Review[]
}

model Order {
  id            Int      @id @default(autoincrement())
  carId         Int
  createdAt     DateTime @default(now())
  buyerId       Int
  paymentIntent String
  cartItemId    Int      @unique
  totalPrice    Decimal
  quantity      Int
  buyer         User     @relation(fields: [buyerId], references: [id])
  car           Car      @relation(fields: [carId], references: [id])
  cartItem      Cart     @relation(fields: [cartItemId], references: [id])

  @@unique([buyerId, cartItemId, carId])
}

model Review {
  id        Int      @id @default(autoincrement())
  desc      String
  carId     Int
  buyerId   Int
  createdAt DateTime @default(now())
  star      Int
  buyer     User     @relation(fields: [buyerId], references: [id])
  car       Car      @relation(fields: [carId], references: [id])

  @@unique([carId, buyerId])
}

model Cart {
  id         Int      @id @default(autoincrement())
  carId      Int
  quantity   Int      @default(1)
  totalPrice Float
  buyerId    Int
  createdAt  DateTime @default(now())
  orderId    Int?
  updatedAt  DateTime @updatedAt
  buyer      User     @relation(fields: [buyerId], references: [id])
  car        Car      @relation(fields: [carId], references: [id])
  order      Order?

  @@unique([carId, buyerId])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  carId     Int
  buyerId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  buyer     User     @relation(fields: [buyerId], references: [id])
  car       Car      @relation(fields: [carId], references: [id])

  @@unique([carId, buyerId])
}

enum Transmission {
  Automatic
  Manual
}
