generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  email     String     @unique
  password  String
  whatsapp  String?
  country   String?
  isSeller  Boolean
  cars      Car[]
  orders    Order[]
  cartItems Cart[]
  reviews   Review[]
  createdAt DateTime   @default(now())
  favorites Favorite[]
}

model Car {
  id           Int          @id @default(autoincrement())
  model        String
  year         Int
  color        String
  coverImage   String
  images       String[]
  fuelType     String
  transmission Transmission
  price        Float
  quantity     Int
  notes        String?
  sellerId     Int
  seller       User         @relation(fields: [sellerId], references: [id])
  reviews      Review[]
  orders       Order[]
  cartItems    Cart[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  Favorite     Favorite[]
}

enum Transmission {
  AUTOMATIC
  MANUAL
}

model Order {
  id            Int      @id @default(autoincrement())
  isCompleted   Boolean  @default(false)
  paymentIntent String? // initially, payemnt for last thing
  buyer         User     @relation(fields: [buyerId], references: [id])
  buyerId       Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  cartItems     Cart[]
  Car           Car     @relation(fields: [carId], references: [id])
  carId         Int 
}

model Review {
  id        Int      @id @default(autoincrement())
  star      Star
  desc      String
  carId     Int
  car       Car      @relation(fields: [carId], references: [id])
  buyerId   Int
  buyer      User     @relation(fields: [buyerId], references: [id])
  createdAt DateTime @default(now())

  @@unique([carId, buyerId])
}

enum Star {
  ONE
  TWO
  THREE
  FOUR
  FIVE
}

model Cart {
  id         Int      @id @default(autoincrement())
  car        Car      @relation(fields: [carId], references: [id])
  carId      Int
  buyer      User     @relation(fields: [buyerId], references: [id])
  buyerId    Int
  quantity   Int      @default(1)
  totalPrice Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Order      Order?   @relation(fields: [orderId], references: [id])
  orderId    Int?
}

model Favorite {
  id        Int      @id @default(autoincrement())
  carId     Int
  car       Car      @relation(fields: [carId], references: [id])
  buyerId   Int
  buyer     User     @relation(fields: [buyerId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([carId, buyerId])
}
